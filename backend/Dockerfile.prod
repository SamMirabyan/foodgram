###########
# BUILDER #
###########

# берем самый легковесный дистрибутив
#FROM python:3.8.10-alpine as builder
FROM python:3.8.10-slim as builder

WORKDIR /usr/src/app/backend

# ограничиваем Python
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# устанавливаем зависимости для работы psycopg2 в alpine дистро
#RUN apk update \
#    && apk add postgresql-dev gcc python3-dev musl-dev

#RUN apk add --no-cache \
#    freetype-dev

RUN pip install --upgrade pip
COPY . .

COPY ./requirements.txt .
# RUN pip3 install -r requirements.txt --no-cache-dir
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/backend/wheels -r requirements.txt


#########
# FINAL #
#########

#FROM python:3.8.10-alpine
FROM python:3.8.10-slim

RUN mkdir -p home/app

RUN addgroup --system --gid 1002 app && adduser --system --uid 1002 --gid 1002 appuser

ENV HOME=/home/app
ENV APP_HOME=/home/app/backend
RUN mkdir $APP_HOME
WORKDIR $APP_HOME

# установить зависимости
# RUN apk update && apk add libpq
RUN apt-get update && apt-get install -y netcat
COPY --from=builder /usr/src/app/backend/wheels /wheels
COPY --from=builder /usr/src/app/backend/requirements.txt .
#RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*

# copy entrypoint.prod.sh
COPY ./entrypoint.prod.sh .
RUN sed -i 's/\r$//g'  $APP_HOME/entrypoint.prod.sh
RUN chmod +x  $APP_HOME/entrypoint.prod.sh


COPY . $APP_HOME
#RUN apt-get update && apt-get install -y netcat

# поменять владельца файлов в папке приложения
RUN chown -R appuser:app $APP_HOME

USER 1002

ENTRYPOINT ["/home/app/backend/entrypoint.prod.sh"]
#CMD ["gunicorn", "foodgram.wsgi:application", "--bind", "0:8000"]